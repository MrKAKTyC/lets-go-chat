// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"

	types "github.com/MrKAKTyC/lets-go-chat/pkg/generated/types"

	websocket "github.com/MrKAKTyC/lets-go-chat/pkg/server/websocket"
)

// ChatRoom is an autogenerated mock type for the ChatRoom type
type ChatRoom struct {
	mock.Mock
}

// GetActiveUsers provides a mock function with given fields:
func (_m *ChatRoom) GetActiveUsers() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// Join provides a mock function with given fields: activeUser
func (_m *ChatRoom) Join(activeUser *websocket.ActiveUser) error {
	ret := _m.Called(activeUser)

	var r0 error
	if rf, ok := ret.Get(0).(func(*websocket.ActiveUser) error); ok {
		r0 = rf(activeUser)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Run provides a mock function with given fields:
func (_m *ChatRoom) Run() {
	_m.Called()
}

// ServeWs provides a mock function with given fields: ctx, params
func (_m *ChatRoom) ServeWs(ctx echo.Context, params types.WsRTMStartParams) error {
	ret := _m.Called(ctx, params)

	var r0 error
	if rf, ok := ret.Get(0).(func(echo.Context, types.WsRTMStartParams) error); ok {
		r0 = rf(ctx, params)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
