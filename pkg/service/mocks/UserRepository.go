// Code generated by mockery v2.9.4. DO NOT EDIT.

package mocks

import (
	dao "github.com/MrKAKTyC/lets-go-chat/pkg/dao"
	mock "github.com/stretchr/testify/mock"
)

// UserRepository is an autogenerated mock type for the UserRepository type
type UserRepository struct {
	mock.Mock
}

// Create provides a mock function with given fields: login, password
func (_m *UserRepository) Create(login string, password string) (*dao.User, error) {
	ret := _m.Called(login, password)

	var r0 *dao.User
	if rf, ok := ret.Get(0).(func(string, string) *dao.User); ok {
		r0 = rf(login, password)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dao.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(login, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Get provides a mock function with given fields: login, password
func (_m *UserRepository) Get(login string, password string) (*dao.User, error) {
	ret := _m.Called(login, password)

	var r0 *dao.User
	if rf, ok := ret.Get(0).(func(string, string) *dao.User); ok {
		r0 = rf(login, password)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*dao.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(login, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
